logging:
  level:
    root: ERROR
    io.zenwave360.example: DEBUG
    org.springframework.cloud.stream: DEBUG
spring:
  sql.init.mode: always
  data:
    mongodb:
      uri: mongodb://localhost:27017/zenwave?replicaSet=rs0
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://localhost:5432/zenwave
    username: zenwave
    password:
    hikari:
      poolName: Hikari
      auto-commit: true
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
  kafka:
    bootstrap-servers: localhost:9092
    properties:
      schema.registry.url: http://localhost:8081
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  cloud:
    function:
      definition: do-customer-request;on-customer-event;on-customer-event-error;on-customer-event-validation-error
    stream:
      bindings:
        do-customer-request-out-0:
          group: zenwave360-example
          destination: customer.requests
          content-type: application/json
        do-customer-request-in-0:
          group: zenwave360-example
          destination: customer.requests
          content-type: application/json

        on-customer-event-out-0:
          group: zenwave360-example
          destination: customer.events
          content-type: application/json
        on-customer-event-in-0:
          group: zenwave360-example
          destination: customer.events
          content-type: application/json

